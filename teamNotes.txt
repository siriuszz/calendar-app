Team Use this file to send notes to the team.  Use this for permanent notes that may be useful to remind team members.  Otherwise, use Slack as usual.  



Git Quick Summary: 
*Pull from origin master to get the latest changes that are ready to go.

*Push to YOUR master branch (Ex: chance-master).  Then create a manual merge request on the Github website into the Github branch: ("testing")

*Git Master will merge branch: "testing" into the branch: "master"


Longer Explanation:

*Before you start: [ git pull origin master ]
    -this will pull in the latest changes to the code and insure you are working off the latest working version of the code.  
    -this should not cause any conflicts, but if it does STOP and communicate w/ Git Master (unless you know whose code is in conflict w/ yours).  Resolve conflict. 
    -*It's a good idea to do: [ git branch ] to make sure you are on the right branch and pulling in updates to the branch you intend to work off of 

*Checkout a branch to work on a new feature using [git checkout -b nameOfYourBranch ]
    -This will put you on the branch you just created with all the code from your last branch (you should always commit before moving branches).  This essentially creates a copy of the the branch that you just left from the point you just left it.  
    -We create multiple branches because it makes it very easy to go back to a point in time, when you KNOW your code was working correctly.  Also, it's a pretty convenient place to push you code to the rest of the team--when your new feature is working.  Though, use your best judgment of when to push (smaller code pushes are better than large ones)
    -Work on your code as you normally would--committing often.  

*Work on the branch you intend work on as usual.  When you finish a feature 


Testing2.

Testing 3.